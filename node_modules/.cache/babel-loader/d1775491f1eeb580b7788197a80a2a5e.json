{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ChampionRobert/StudioProjectsInTrial/CRATE-ALTS/fullstack-javascript-architecture-configd/frontend/app/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ChampionRobert/StudioProjectsInTrial/CRATE-ALTS/fullstack-javascript-architecture-configd/frontend/app/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/ChampionRobert/StudioProjectsInTrial/CRATE-ALTS/fullstack-javascript-architecture-configd/frontend/app/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ChampionRobert/StudioProjectsInTrial/CRATE-ALTS/fullstack-javascript-architecture-configd/frontend/app/web/src/modules/admin/user/List/index.js\";\n\n// Imports\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux'; // UI Imports\n\nimport Fade from '@material-ui/core/Fade';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles'; // App Imports\n\nimport { messageShow } from '../../../common/api/actions';\nimport { getList } from '../../../user/api/actions/query';\nimport EmptyMessage from '../../../common/EmptyMessage';\nimport Loading from '../../../common/Loading';\nimport Section from '../../../common/Section';\nimport Item from './Item'; // Component\n\nvar List = function List(_ref) {\n  var classes = _ref.classes;\n\n  // state\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isRefreshing = _useState2[0],\n      isRefreshingToggle = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  var dispatch = useDispatch(); // on component load\n\n  useEffect(function () {\n    refresh();\n  }, []); // refresh\n\n  var refresh = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$getList, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              isRefreshingToggle(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return getList();\n\n            case 4:\n              _yield$getList = _context.sent;\n              data = _yield$getList.data;\n\n              if (data.success) {\n                setUsers(data.data);\n              } else {\n                dispatch(messageShow(data.message));\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch(messageShow('There was some error. Please try again.'));\n\n            case 12:\n              _context.prev = 12;\n              isRefreshingToggle(false);\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function refresh() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // render\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: refresh,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Refresh\")), /*#__PURE__*/React.createElement(Section, {\n    style: {\n      paddingTop: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, isRefreshing ? /*#__PURE__*/React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }) : users.length > 0 ? /*#__PURE__*/React.createElement(Fade, {\n    in: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 27\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 27\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 27\n    }\n  }, \"Name\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }\n  }, users.map(function (user) {\n    return /*#__PURE__*/React.createElement(Item, {\n      key: user._id,\n      user: user,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    });\n  })))) : /*#__PURE__*/React.createElement(EmptyMessage, {\n    message: 'No users to show.',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }))));\n}; // Component Properties\n\n\nList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(List);","map":{"version":3,"sources":["/Users/ChampionRobert/StudioProjectsInTrial/CRATE-ALTS/fullstack-javascript-architecture-configd/frontend/app/web/src/modules/admin/user/List/index.js"],"names":["React","useState","useEffect","PropTypes","useDispatch","Fade","Toolbar","Paper","Table","TableBody","TableCell","TableHead","TableRow","Button","withStyles","styles","messageShow","getList","EmptyMessage","Loading","Section","Item","List","classes","isRefreshing","isRefreshingToggle","users","setUsers","dispatch","refresh","data","success","message","toolbar","paddingTop","length","table","map","user","_id","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["// Imports\nimport React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch } from 'react-redux'\n\n// UI Imports\nimport Fade from '@material-ui/core/Fade'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Paper from '@material-ui/core/Paper'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core/styles'\nimport styles from './styles'\n\n// App Imports\nimport { messageShow } from '../../../common/api/actions'\nimport { getList } from '../../../user/api/actions/query'\nimport EmptyMessage from '../../../common/EmptyMessage'\nimport Loading from '../../../common/Loading'\nimport Section from '../../../common/Section'\nimport Item from './Item'\n\n// Component\nconst List = ({ classes }) => {\n  // state\n  const [isRefreshing, isRefreshingToggle] = useState(false)\n  const [users, setUsers] = useState([])\n  const dispatch = useDispatch()\n\n  // on component load\n  useEffect(() => {\n    refresh()\n  }, [])\n\n  // refresh\n  const refresh = async () => {\n    isRefreshingToggle(true)\n\n    try {\n      const { data } = await getList()\n\n      if(data.success) {\n        setUsers(data.data)\n      } else {\n        dispatch(messageShow(data.message))\n      }\n    } catch(error) {\n      dispatch(messageShow('There was some error. Please try again.'))\n    } finally {\n      isRefreshingToggle(false)\n    }\n  }\n\n  // render\n  return (\n    <div>\n      {/* Actions */}\n      <Toolbar className={classes.toolbar}>\n        <Button onClick={refresh}>\n          Refresh\n        </Button>\n      </Toolbar>\n\n      {/* List */}\n      <Section style={{ paddingTop: 0 }}>\n        <Paper>\n          {\n            isRefreshing\n              ? <Loading />\n              : users.length > 0\n                ? <Fade in={true}>\n                    <Table className={classes.table}>\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Image</TableCell>\n                          <TableCell>Email</TableCell>\n                          <TableCell>Name</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {\n                          users.map(user => (\n                            <Item\n                              key={user._id}\n                              user={user}\n                            />\n                          ))\n                        }\n                      </TableBody>\n                    </Table>\n                  </Fade>\n                : <EmptyMessage message={'No users to show.'} />\n          }\n        </Paper>\n      </Section>\n    </div>\n  )\n}\n\n// Component Properties\nList.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(List)\n"]},"metadata":{},"sourceType":"module"}