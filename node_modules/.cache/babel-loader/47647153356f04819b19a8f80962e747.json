{"ast":null,"code":"import _objectSpread from \"/Users/ChampionRobert/ForkedStudioProjects/fullstack-js-arch-webonly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/ChampionRobert/ForkedStudioProjects/fullstack-js-arch-webonly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ChampionRobert/ForkedStudioProjects/fullstack-js-arch-webonly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/ChampionRobert/ForkedStudioProjects/fullstack-js-arch-webonly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ChampionRobert/ForkedStudioProjects/fullstack-js-arch-webonly/src/modules/user/Login/index.js\";\n\n// Imports\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty'; // UI Import\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport IconCheck from '@material-ui/icons/Check';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles'; // App Imports\n\nimport { login } from '../api/actions/query';\nimport AuthCheck from '../../auth/AuthCheck'; // Component\n\nvar Login = function Login(_ref) {\n  var classes = _ref.classes;\n\n  // state\n  var _useState = useState({\n    email: '',\n    password: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      isLoading = _useSelector.isLoading;\n\n  var dispatch = useDispatch(); // on login\n\n  var onLogin = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!isEmpty(user.email) && !isEmpty(user.password)) {\n                dispatch(login(user));\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onLogin(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // on change\n\n\n  var onChange = function onChange(event) {\n    setUser(_objectSpread(_objectSpread({}, user), {}, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"inherit\",\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Already have an account? Please login:\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"email\",\n    type: \"email\",\n    value: user.email,\n    onChange: onChange,\n    label: \"Email\",\n    placeholder: \"Enter email\",\n    required: true,\n    margin: \"dense\",\n    autoComplete: \"off\",\n    fullWidth: true,\n    autoFocus: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"password\",\n    type: \"password\",\n    value: user.password,\n    onChange: onChange,\n    label: \"Password\",\n    placeholder: \"Enter password\",\n    required: true,\n    margin: \"dense\",\n    autoComplete: \"off\",\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.buttonsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    type: \"submit\",\n    \"aria-label\": \"Save\",\n    color: \"primary\",\n    disabled: isLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconCheck, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(AuthCheck, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n}; // Component Properties\n\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Login);","map":{"version":3,"sources":["/Users/ChampionRobert/ForkedStudioProjects/fullstack-js-arch-webonly/src/modules/user/Login/index.js"],"names":["React","useState","useDispatch","useSelector","PropTypes","isEmpty","Grid","Paper","Typography","TextField","IconButton","IconCheck","withStyles","styles","login","AuthCheck","Login","classes","email","password","user","setUser","state","auth","isLoading","dispatch","onLogin","event","preventDefault","onChange","target","name","value","root","container","heading","buttonsContainer","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["// Imports\nimport React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport isEmpty from 'lodash/isEmpty'\n\n// UI Import\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport IconButton from '@material-ui/core/IconButton'\nimport IconCheck from '@material-ui/icons/Check'\nimport { withStyles } from '@material-ui/core/styles'\nimport styles from './styles'\n\n// App Imports\nimport { login } from '../api/actions/query'\nimport AuthCheck from '../../auth/AuthCheck'\n\n// Component\nconst Login = ({ classes }) => {\n  // state\n  const [user, setUser] = useState({ email: '', password: '' })\n  const { isLoading } = useSelector(state => state.auth)\n  const dispatch = useDispatch()\n\n  // on login\n  const onLogin = async event => {\n    event.preventDefault()\n\n    if(!isEmpty(user.email) && !isEmpty(user.password)) {\n      dispatch(login(user))\n    }\n  }\n\n  // on change\n  const onChange = event => {\n    setUser({\n      ...user,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.container}>\n        <Typography\n          variant='subtitle1'\n          color='inherit'\n          className={classes.heading}\n        >\n          Already have an account? Please login:\n        </Typography>\n\n        <form onSubmit={onLogin}>\n          {/* Input - email */}\n          <Grid item xs={12}>\n            <TextField\n              name='email'\n              type='email'\n              value={user.email}\n              onChange={onChange}\n              label='Email'\n              placeholder='Enter email'\n              required={true}\n              margin='dense'\n              autoComplete='off'\n              fullWidth\n              autoFocus\n            />\n          </Grid>\n\n          {/* Input - password */}\n          <Grid item xs={12}>\n            <TextField\n              name='password'\n              type='password'\n              value={user.password}\n              onChange={onChange}\n              label='Password'\n              placeholder='Enter password'\n              required={true}\n              margin='dense'\n              autoComplete='off'\n              fullWidth\n            />\n          </Grid>\n\n          {/* Button -  Save */}\n          <Grid item xs={12} className={classes.buttonsContainer}>\n            <IconButton\n              type='submit'\n              aria-label='Save'\n              color='primary'\n              disabled={isLoading}\n            >\n              <IconCheck />\n            </IconButton>\n          </Grid>\n        </form>\n      </Paper>\n\n      {/* Auth Check */}\n      <AuthCheck />\n    </div>\n  )\n}\n\n// Component Properties\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Login)\n"]},"metadata":{},"sourceType":"module"}