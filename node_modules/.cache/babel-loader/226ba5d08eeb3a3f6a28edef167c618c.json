{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ChampionRobert/ForkedStudioProjects/fullstack-js-arch-webonly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ChampionRobert/ForkedStudioProjects/fullstack-js-arch-webonly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ChampionRobert/ForkedStudioProjects/fullstack-js-arch-webonly/src/modules/note/List/index.js\";\n\n// Imports\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'; // UI Imports\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core';\nimport styles from './styles'; // App Imports\n\nimport routes from '../../../setup/routes';\nimport { messageShow } from '../../common/api/actions';\nimport { list as getList } from '../api/actions/query';\nimport { remove } from '../api/actions/mutation';\nimport Section from '../../common/Section';\nimport Loading from '../../common/Loading';\nimport EmptyMessage from '../../common/EmptyMessage';\nimport Item from './Item'; // Component\n\nvar List = function List(_ref) {\n  var classes = _ref.classes;\n\n  // state\n  var _useSelector = useSelector(function (state) {\n    return state.notes;\n  }),\n      isLoading = _useSelector.isLoading,\n      list = _useSelector.list;\n\n  var dispatch = useDispatch(); // on component load\n\n  useEffect(function () {\n    refresh();\n  }, []); // refresh\n\n  var refresh = function refresh() {\n    dispatch(getList());\n  };\n\n  var onDelete = function onDelete(noteId) {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var check, _yield$remove, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              check = window.confirm('Are you sure you want to delete this note?');\n\n              if (!check) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.prev = 2;\n              _context.next = 5;\n              return remove({\n                noteId\n              });\n\n            case 5:\n              _yield$remove = _context.sent;\n              data = _yield$remove.data;\n              dispatch(messageShow(data.message));\n\n              if (data.success) {\n                refresh();\n              }\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n              dispatch(messageShow('Some error occurred. Please try again.'));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 11]]);\n    }));\n  }; // render\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"inherit\",\n    className: classes.grow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(Link, {\n    to: routes.noteCreate.path,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"inherit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Create\"))), /*#__PURE__*/React.createElement(Section, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }) : list.length === 0 ? /*#__PURE__*/React.createElement(EmptyMessage, {\n    message: 'You have not added any notes yet.',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }) : list.map(function (note) {\n    return /*#__PURE__*/React.createElement(Item, {\n      key: note._id,\n      note: note,\n      onDelete: onDelete,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    });\n  })));\n}; // Component Properties\n\n\nList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(List);","map":{"version":3,"sources":["/Users/ChampionRobert/ForkedStudioProjects/fullstack-js-arch-webonly/src/modules/note/List/index.js"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","Link","Toolbar","Typography","Button","withStyles","styles","routes","messageShow","list","getList","remove","Section","Loading","EmptyMessage","Item","List","classes","state","notes","isLoading","dispatch","refresh","onDelete","noteId","check","window","confirm","data","message","success","grow","noteCreate","path","length","map","note","_id","propTypes","object","isRequired"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,IAAI,IAAIC,OAAjB,QAAgC,sBAAhC;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC5B;AAD4B,qBAEAjB,WAAW,CAAC,UAAAkB,KAAK;AAAA,WAAIA,KAAK,CAACC,KAAV;AAAA,GAAN,CAFX;AAAA,MAEpBC,SAFoB,gBAEpBA,SAFoB;AAAA,MAETX,IAFS,gBAETA,IAFS;;AAG5B,MAAMY,QAAQ,GAAGtB,WAAW,EAA5B,CAH4B,CAK5B;;AACAF,EAAAA,SAAS,CAAC,YAAM;AACdyB,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT,CAN4B,CAU5B;;AACA,MAAMA,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBD,IAAAA,QAAQ,CAACX,OAAO,EAAR,CAAR;AACD,GAFD;;AAIA,MAAMa,QAAQ,GAAG,SAAXA,QAAW,CAAAC,MAAM;AAAA,iFAAI;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrBC,cAAAA,KADqB,GACbC,MAAM,CAACC,OAAP,CAAe,4CAAf,CADa;;AAAA,mBAGtBF,KAHsB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAKEd,MAAM,CAAC;AAAEa,gBAAAA;AAAF,eAAD,CALR;;AAAA;AAAA;AAKbI,cAAAA,IALa,iBAKbA,IALa;AAOrBP,cAAAA,QAAQ,CAACb,WAAW,CAACoB,IAAI,CAACC,OAAN,CAAZ,CAAR;;AAEA,kBAAGD,IAAI,CAACE,OAAR,EAAiB;AACfR,gBAAAA,OAAO;AACR;;AAXoB;AAAA;;AAAA;AAAA;AAAA;AAarBD,cAAAA,QAAQ,CAACb,WAAW,CAAC,wCAAD,CAAZ,CAAR;;AAbqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;AAAA,GAAvB,CAf4B,CAiC5B;;;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAC,SAA/B;AAAyC,IAAA,SAAS,EAAES,OAAO,CAACc,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAExB,MAAM,CAACyB,UAAP,CAAkBC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CALF,CADF,eAWE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIb,SAAS,gBACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAELX,IAAI,CAACyB,MAAL,KAAgB,CAAhB,gBACA,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,mCAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAEAzB,IAAI,CAAC0B,GAAL,CAAS,UAAAC,IAAI;AAAA,wBACb,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACC,GADZ;AAEE,MAAA,IAAI,EAAED,IAFR;AAGE,MAAA,QAAQ,EAAEb,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa;AAAA,GAAb,CANR,CAXF,CADF;AA6BD,CA/DD,C,CAiEA;;;AACAP,IAAI,CAACsB,SAAL,GAAiB;AACfrB,EAAAA,OAAO,EAAEnB,SAAS,CAACyC,MAAV,CAAiBC;AADX,CAAjB;AAIA,eAAenC,UAAU,CAACC,MAAD,CAAV,CAAmBU,IAAnB,CAAf","sourcesContent":["// Imports\nimport React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\n// UI Imports\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core'\nimport styles from './styles'\n\n// App Imports\nimport routes from '../../../setup/routes'\nimport { messageShow } from '../../common/api/actions'\nimport { list as getList } from '../api/actions/query'\nimport { remove } from '../api/actions/mutation'\nimport Section from '../../common/Section'\nimport Loading from '../../common/Loading'\nimport EmptyMessage from '../../common/EmptyMessage'\nimport Item from './Item'\n\n// Component\nconst List = ({ classes }) => {\n  // state\n  const { isLoading, list } = useSelector(state => state.notes)\n  const dispatch = useDispatch()\n\n  // on component load\n  useEffect(() => {\n    refresh()\n  }, [])\n\n  // refresh\n  const refresh = () => {\n    dispatch(getList())\n  }\n\n  const onDelete = noteId => async () => {\n    let check = window.confirm('Are you sure you want to delete this note?')\n\n    if(check) {\n      try {\n        const { data } = await remove({ noteId })\n\n        dispatch(messageShow(data.message))\n\n        if(data.success) {\n          refresh()\n        }\n      } catch (error) {\n        dispatch(messageShow('Some error occurred. Please try again.'))\n      }\n    }\n  }\n\n  // render\n  return (\n    <div>\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n          Notes\n        </Typography>\n\n        <Link to={routes.noteCreate.path}>\n          <Button color=\"inherit\">Create</Button>\n        </Link>\n      </Toolbar>\n\n      <Section>\n        {\n          isLoading\n            ? <Loading />\n            : list.length === 0\n            ? <EmptyMessage message={'You have not added any notes yet.'} />\n            : list.map(note =>\n              <Item\n                key={note._id}\n                note={note}\n                onDelete={onDelete}\n              />\n            )\n        }\n      </Section>\n    </div>\n  )\n}\n\n// Component Properties\nList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(List)\n"]},"metadata":{},"sourceType":"module"}